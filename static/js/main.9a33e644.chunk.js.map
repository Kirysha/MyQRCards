{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","Panel","PanelHeader","Group","header","Header","mode","Cell","before","photo_200","Avatar","src","description","city","title","first_name","last_name","Div","Button","stretched","size","onClick","data-to","Persik","props","left","PanelHeaderBack","className","persik","alt","App","useState","activePanel","setActivePanel","setUser","ScreenSpinner","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","View","ReactDOM","render","getElementById"],"mappings":"6TAgDeA,EApCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,kBAACC,EAAA,EAAD,CAAOH,GAAIA,GACV,kBAACI,EAAA,EAAD,gBACCF,GACD,kBAACG,EAAA,EAAD,CAAOC,OAAQ,kBAACC,EAAA,EAAD,CAAQC,KAAK,aAAb,qCACd,kBAACC,EAAA,EAAD,CACCC,OAAQR,EAAYS,UAAY,kBAACC,EAAA,EAAD,CAAQC,IAAKX,EAAYS,YAAe,KACxEG,YAAaZ,EAAYa,MAAQb,EAAYa,KAAKC,MAAQd,EAAYa,KAAKC,MAAQ,IAFpF,UAIKd,EAAYe,WAJjB,YAI+Bf,EAAYgB,aAI5C,kBAACb,EAAA,EAAD,CAAOC,OAAQ,kBAACC,EAAA,EAAD,CAAQC,KAAK,aAAb,uBACd,kBAACW,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAQC,WAAS,EAACC,KAAK,IAAId,KAAK,YAAYe,QAAStB,EAAIuB,UAAQ,UAAjE,kC,QC3BW,MAA0B,mCC0B1BC,G,OAhBA,SAAAC,GAAK,OACnB,kBAACvB,EAAA,EAAD,CAAOH,GAAI0B,EAAM1B,IAChB,kBAACI,EAAA,EAAD,CACCuB,KAAM,kBAACC,EAAA,EAAD,CAAiBL,QAASG,EAAMzB,GAAIuB,UAAQ,UADnD,UAKA,yBAAKK,UAAU,SAAShB,IAAKiB,EAAQC,IAAI,sBC8B5BC,EArCH,WAAO,IAAD,EACsBC,mBAAS,QAD/B,mBACTC,EADS,KACIC,EADJ,OAEeF,mBAAS,MAFxB,mBAET/B,EAFS,KAEIkC,EAFJ,OAGYH,mBAAS,kBAACI,EAAA,EAAD,CAAef,KAAK,WAHzC,mBAGTgB,EAHS,KAGDC,EAHC,KAKhBC,qBAAU,WAAM,4CAQd,4BAAAC,EAAA,sEACqBC,IAAOC,KAAK,uBADjC,OACQC,EADR,OAEER,EAAQQ,GACRL,EAAU,MAHZ,4CARc,sBACdG,IAAOG,WAAU,YAAiC,IAAD,IAA7BC,OAAUC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,KAClC,GAAa,yBAATD,EAAiC,CACnC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAL5B,mCAadQ,KACC,IAEH,IAAMxD,EAAK,SAACyD,GACVvB,EAAeuB,EAAEC,cAAcC,QAAQC,KAGzC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAM5B,YAAaA,EAAaI,OAAQA,GACtC,kBAAC,EAAD,CAAMtC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,QClClCyC,IAAOC,KAAK,gBAEZoB,IAASC,OAAO,kBAAC,EAAD,MAASd,SAASe,eAAe,W","file":"static/js/main.9a33e644.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport { AdaptivityProvider, AppRoot } from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\nimport Persik from \"./panels/Persik\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <AdaptivityProvider>\n      <AppRoot>\n        <View activePanel={activePanel} popout={popout}>\n          <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\n          <Persik id=\"persik\" go={go} />\n        </View>\n      </AppRoot>\n    </AdaptivityProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}