{"version":3,"sources":["panels/History.js","panels/Frame.js","App.js","index.js"],"names":["History","id","setActivePanel","setCurentLink","useEffect","bridge","send","then","keys","setData","useState","data","size","map","item","header","onClick","code_data","style","position","right","bottom","zIndex","e","replace","concat","key","value","Frame","props","left","top","mode","fill","curentLink","flex","src","onLoad","console","log","seamless","App","activePanel","View","ReactDOM","render","document","getElementById"],"mappings":"oOAuEeA,EAzDC,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cAmBrCC,qBAAU,WACRC,IAAOC,KAAK,0BAA0BC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcC,EAAQD,SAEnE,MAAwBE,mBAAS,IAAjC,mBAAOC,EAAP,KAAaF,EAAb,KACA,OACE,eAAC,IAAD,CAAOR,GAAIA,EAAX,UACE,cAAC,IAAD,yDACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAUW,KAAK,IAAf,SACGD,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CAGEC,OAAQD,EAERE,SAnBEC,EAmBYH,EAnBE,WAC1BX,EAAc,oCAAsCc,EAAY,SAChEf,EAAe,YAaAY,GAfJ,IAACG,SAyBV,cAAC,IAAD,CACEC,MAAO,CAAEC,SAAU,QAASC,MAAO,GAAIC,OAAQ,GAAIC,OAAQ,GAC3DV,KAAK,IACLI,QA1CK,SAACO,GACVlB,IAAOC,KAAK,0BAA0BC,MAAK,YAAoB,IAAjBU,EAAgB,EAAhBA,UAC5C,GAAIA,EAAW,CAEb,IAAMhB,EAAKgB,EACRO,QAAQ,oCAAqC,IAC7CA,QAAQ,QAAS,IACpBrB,EAAcc,GACdR,EAAQE,EAAKc,OAAOxB,IACpBI,IAAOC,KAAK,qBAAsB,CAAEoB,IAAKzB,EAAI0B,MAAOV,IACpDf,EAAe,cA6BjB,SAKE,cAAC,IAAD,U,kBCzBO0B,EA5BD,SAACC,GAAD,OACZ,eAAC,IAAD,CAAO5B,GAAI4B,EAAM5B,GAAjB,UACE,cAAC,IAAD,CACEiB,MAAO,CAAEC,SAAU,QAASW,KAAM,EAAGC,IAAK,EAAGT,OAAQ,GACrDV,KAAK,IACLI,QAAS,kBAAMa,EAAM3B,eAAe,YACpC8B,KAAK,WAJP,SAME,cAAC,IAAD,CAAYC,KAAK,WAElBJ,EAAMK,YACL,wBACEjC,GAAG,YACHiB,MAAO,CAAEiB,KAAM,GACfC,IAAKP,EAAMK,WACXG,OAAQ,SAACd,GAAD,OAAOe,QAAQC,OACvBC,UAAQ,QC6BDC,EAzCH,WACV,MAAsC/B,mBAAS,WAA/C,mBAAOgC,EAAP,KAAoBxC,EAApB,KACA,EAAoCQ,mBAAS,MAA7C,mBAAOwB,EAAP,KAAmB/B,EAAnB,KAmBA,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAACwC,EAAA,EAAD,CAAMD,YAAaA,EAAnB,UACE,cAAC,EAAD,CACEzC,GAAG,UACHC,eAAgBA,EAChBC,cAAeA,IAEjB,cAAC,EAAD,CACEF,GAAG,QACHC,eAAgBA,EAChBgC,WAAYA,YCrCxB7B,IAAOC,KAAK,gBAEZsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5233d12e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Button,\n  CardGrid,\n  ContentCard,\n  Group,\n  Panel,\n  PanelHeader,\n} from \"@vkontakte/vkui\";\nimport { Icon28QrCodeOutline } from \"@vkontakte/icons\";\nimport bridge from \"@vkontakte/vk-bridge\";\n\nconst History = ({ id, setActivePanel, setCurentLink }) => {\n  const go = (e) => {\n    bridge.send(\"VKWebAppOpenCodeReader\").then(({ code_data }) => {\n      if (code_data) {\n        //window.location = code_data;\n        const id = code_data\n          .replace(\"https://card.myqrcards.com/links/\", \"\")\n          .replace(\"/info\", \"\");\n        setCurentLink(code_data);\n        setData(data.concat(id));\n        bridge.send(\"VKWebAppStorageSet\", { key: id, value: code_data });\n        setActivePanel(\"frame\");\n      }\n    });\n  };\n  const open = (code_data) => () => {\n    setCurentLink(\"https://card.myqrcards.com/links/\" + code_data + \"/info\");\n    setActivePanel(\"frame\");\n  };\n  useEffect(() => {\n    bridge.send(\"VKWebAppStorageGetKeys\").then(({ keys }) => setData(keys));\n  });\n  const [data, setData] = useState([]);\n  return (\n    <Panel id={id}>\n      <PanelHeader>История</PanelHeader>\n      <Group>\n        <CardGrid size=\"l\">\n          {data.map((item) => (\n            <ContentCard\n              key={item}\n              //subtitle={\"Должность\"}\n              header={item}\n              //caption={\"a\"}\n              onClick={open(item)}\n            />\n          ))}\n        </CardGrid>\n      </Group>\n\n      <Button\n        style={{ position: \"fixed\", right: 10, bottom: 10, zIndex: 2 }}\n        size=\"m\"\n        onClick={go}\n      >\n        <Icon28QrCodeOutline />\n      </Button>\n    </Panel>\n  );\n};\n\nHistory.propTypes = {\n  id: PropTypes.string.isRequired,\n  setActivePanel: PropTypes.func.isRequired,\n  setCurentLink: PropTypes.func.isRequired,\n};\n\nexport default History;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Persik.css\";\nimport { Button, Panel, PanelHeader, PanelHeaderBack } from \"@vkontakte/vkui\";\nimport { Icon24Back } from \"@vkontakte/icons\";\nconst Frame = (props) => (\n  <Panel id={props.id}>\n    <Button\n      style={{ position: \"fixed\", left: 5, top: 5, zIndex: 2 }}\n      size=\"s\"\n      onClick={() => props.setActivePanel(\"history\")}\n      mode=\"tertiary\"\n    >\n      <Icon24Back fill=\"#fff\" />\n    </Button>\n    {props.curentLink && (\n      <iframe\n        id=\"my_iframe\"\n        style={{ flex: 1 }}\n        src={props.curentLink}\n        onLoad={(e) => console.log()}\n        seamless\n      ></iframe>\n    )}\n  </Panel>\n);\n\nFrame.propTypes = {\n  id: PropTypes.string.isRequired,\n  setActivePanel: PropTypes.func.isRequired,\n  curentLink: PropTypes.string,\n};\n\nexport default Frame;\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport { AdaptivityProvider, AppRoot } from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport History from \"./panels/History\";\nimport Frame from \"./panels/Frame\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"history\");\n  const [curentLink, setCurentLink] = useState(null);\n  //const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  // useEffect(() => {\n  //   bridge.subscribe(({ detail: { type, data } }) => {\n  //     if (type === \"VKWebAppUpdateConfig\") {\n  //       const schemeAttribute = document.createAttribute(\"scheme\");\n  //       schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n  //       document.body.attributes.setNamedItem(schemeAttribute);\n  //     }\n  //   });\n  //   async function fetchData() {\n  //     const user = await bridge.send(\"VKWebAppGetUserInfo\");\n  //     setUser(user);\n  //     setPopout(null);\n  //   }\n  //   fetchData();\n  // }, []);\n\n  return (\n    <AdaptivityProvider>\n      <AppRoot>\n        <View activePanel={activePanel}>\n          <History\n            id=\"history\"\n            setActivePanel={setActivePanel}\n            setCurentLink={setCurentLink}\n          />\n          <Frame\n            id=\"frame\"\n            setActivePanel={setActivePanel}\n            curentLink={curentLink}\n          />\n        </View>\n      </AppRoot>\n    </AdaptivityProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}