{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","Panel","PanelHeader","map","item","List","Link","href","target","Persik","props","left","PanelHeaderBack","onClick","data-to","className","src","persik","alt","App","useState","activePanel","e","bridge","send","then","code_data","window","location","View","ReactDOM","render","document","getElementById"],"mappings":"4PAyLeA,EA3KF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,EAAOC,GAAP,EAAWC,YAAX,OACX,kBAACC,EAAA,EAAD,CAAOH,GAAIA,GACT,kBAACI,EAAA,EAAD,mkBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,KAAK,qBAAqBC,OAAO,UACpCJ,S,QC3II,MAA0B,mCC0B1BK,G,OAhBA,SAAAC,GAAK,OACnB,kBAACT,EAAA,EAAD,CAAOH,GAAIY,EAAMZ,IAChB,kBAACI,EAAA,EAAD,CACCS,KAAM,kBAACC,EAAA,EAAD,CAAiBC,QAASH,EAAMX,GAAIe,UAAQ,UADnD,UAKA,yBAAKC,UAAU,SAASC,IAAKC,EAAQC,IAAI,sBCkC5BC,EAzCH,WAAO,IAAD,EACsBC,mBAAS,QAD/B,mBACTC,EADS,aAEeD,mBAAS,OAFxB,mBAETpB,EAFS,KAqBVD,GArBU,KAqBL,SAACuB,GACVC,IAAOC,KAAK,0BAA0BC,MAAK,YAAoB,IAAjBC,EAAgB,EAAhBA,UAExCA,IAAWC,OAAOC,SAAWF,QAKrC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAACG,EAAA,EAAD,CAAMR,YAAaA,GACjB,kBAAC,EAAD,CAAMvB,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,QCtClCwB,IAAOC,KAAK,gBAEZM,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f576ef34.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport Header from \"@vkontakte/vkui/dist/components/Header/Header\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport Cell from \"@vkontakte/vkui/dist/components/Cell/Cell\";\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\nimport List from \"@vkontakte/vkui/dist/components/List/List\";\nimport SimpleCell from \"@vkontakte/vkui/dist/components/SimpleCell/SimpleCell\";\nimport Link from \"@vkontakte/vkui/dist/components/Link/Link\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n  <Panel id={id}>\n    <PanelHeader>История</PanelHeader>\n    {[\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n      \"test1\",\n    ].map((item) => (\n      <List>\n        <Link href=\"https://google.com\" target=\"_blank\">\n          {item}\n        </Link>\n        {/* <SimpleCell\n          stretched\n          size=\"l\"\n          mode=\"secondary\"\n          onClick={go}\n          data-to=\"persik\"\n        >\n          {item}\n        </SimpleCell> */}\n      </List>\n    ))}\n    {/* {fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group> */}\n  </Panel>\n);\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport { AdaptivityProvider, AppRoot } from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\nimport Persik from \"./panels/Persik\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  //const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  // useEffect(() => {\n  //   bridge.subscribe(({ detail: { type, data } }) => {\n  //     if (type === \"VKWebAppUpdateConfig\") {\n  //       const schemeAttribute = document.createAttribute(\"scheme\");\n  //       schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n  //       document.body.attributes.setNamedItem(schemeAttribute);\n  //     }\n  //   });\n  //   async function fetchData() {\n  //     const user = await bridge.send(\"VKWebAppGetUserInfo\");\n  //     setUser(user);\n  //     setPopout(null);\n  //   }\n  //   fetchData();\n  // }, []);\n\n  const go = (e) => {\n    bridge.send(\"VKWebAppOpenCodeReader\").then(({ code_data }) => {\n      //console.log(\"test\", );\n      if (code_data) window.location = code_data;\n      //alert(\"Test\")\n    });\n  };\n\n  return (\n    <AdaptivityProvider>\n      <AppRoot>\n        <View activePanel={activePanel}>\n          <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\n          <Persik id=\"persik\" go={go} />\n        </View>\n      </AppRoot>\n    </AdaptivityProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}