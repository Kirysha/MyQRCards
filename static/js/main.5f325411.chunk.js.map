{"version":3,"sources":["panels/History.js","panels/Frame.js","App.js","index.js"],"names":["History","id","setActivePanel","setCurentLink","useEffect","bridge","send","then","data","setData","useState","size","map","item","header","onClick","code_data","style","position","right","bottom","zIndex","e","key","value","Frame","props","App","activePanel","curentLink","View","ReactDOM","render","document","getElementById"],"mappings":"oOAmEeA,EArDC,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cAerCC,qBAAU,WACRC,IAAOC,KAAK,0BAA0BC,MAAK,SAACC,GAAD,OAAUC,EAAQD,SAE/D,MAAwBE,mBAAS,IAAjC,mBAAOF,EAAP,KAAaC,EAAb,KACA,OACE,eAAC,IAAD,CAAOR,GAAIA,EAAX,UACE,cAAC,IAAD,yDACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAUU,KAAK,IAAf,SACGH,EAAKI,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CAGEC,OAAQD,EAERE,SAnBEC,EAmBYH,EAnBE,WAC1BV,EAAca,GACdd,EAAe,YAaAW,GAfJ,IAACG,SAyBV,cAAC,IAAD,CACEC,MAAO,CAAEC,SAAU,QAASC,MAAO,GAAIC,OAAQ,GAAIC,OAAQ,GAC3DV,KAAK,IACLI,QAtCK,SAACO,GACVjB,IAAOC,KAAK,0BAA0BC,MAAK,YAAoB,IAAjBS,EAAgB,EAAhBA,UACxCA,IAEFb,EAAca,GACdd,EAAe,SACfG,IAAOC,KAAK,qBAAsB,CAAEiB,IAAKP,EAAWQ,MAAOR,SA6B7D,SAKE,cAAC,IAAD,UCrBOS,G,OA5BD,SAACC,GAAD,OACZ,cAAC,IAAD,CAAOzB,GAAIyB,EAAMzB,OC4CJ0B,EAzCH,WACV,MAAsCjB,mBAAS,WAA/C,mBAAOkB,EAAP,KAAoB1B,EAApB,KACA,EAAoCQ,mBAAS,MAA7C,mBAAOmB,EAAP,KAAmB1B,EAAnB,KAmBA,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC2B,EAAA,EAAD,CAAMF,YAAaA,EAAnB,UACE,cAAC,EAAD,CACE3B,GAAG,UACHC,eAAgBA,EAChBC,cAAeA,IAEjB,cAAC,EAAD,CACEF,GAAG,QACHC,eAAgBA,EAChB2B,WAAYA,YCrCxBxB,IAAOC,KAAK,gBAEZyB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5f325411.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Button,\n  CardGrid,\n  ContentCard,\n  Group,\n  Panel,\n  PanelHeader,\n} from \"@vkontakte/vkui\";\nimport { Icon28QrCodeOutline } from \"@vkontakte/icons\";\nimport bridge from \"@vkontakte/vk-bridge\";\n\nconst History = ({ id, setActivePanel, setCurentLink }) => {\n  const go = (e) => {\n    bridge.send(\"VKWebAppOpenCodeReader\").then(({ code_data }) => {\n      if (code_data) {\n        //window.location = code_data;\n        setCurentLink(code_data);\n        setActivePanel(\"frame\");\n        bridge.send(\"VKWebAppStorageSet\", { key: code_data, value: code_data });\n      }\n    });\n  };\n  const open = (code_data) => () => {\n    setCurentLink(code_data);\n    setActivePanel(\"frame\");\n  };\n  useEffect(() => {\n    bridge.send(\"VKWebAppStorageGetKeys\").then((data) => setData(data));\n  });\n  const [data, setData] = useState([]);\n  return (\n    <Panel id={id}>\n      <PanelHeader>История</PanelHeader>\n      <Group>\n        <CardGrid size=\"l\">\n          {data.map((item) => (\n            <ContentCard\n              key={item}\n              //subtitle={\"Должность\"}\n              header={item}\n              //caption={\"a\"}\n              onClick={open(item)}\n            />\n          ))}\n        </CardGrid>\n      </Group>\n\n      <Button\n        style={{ position: \"fixed\", right: 10, bottom: 10, zIndex: 2 }}\n        size=\"m\"\n        onClick={go}\n      >\n        <Icon28QrCodeOutline />\n      </Button>\n    </Panel>\n  );\n};\n\nHistory.propTypes = {\n  id: PropTypes.string.isRequired,\n  setActivePanel: PropTypes.func.isRequired,\n  setCurentLink: PropTypes.func.isRequired,\n};\n\nexport default History;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Persik.css\";\nimport { Button, Panel, PanelHeader, PanelHeaderBack } from \"@vkontakte/vkui\";\nimport { Icon24Back } from \"@vkontakte/icons\";\nconst Frame = (props) => (\n  <Panel id={props.id}>\n    {/* <Button\n      style={{ position: \"fixed\", left: 5, top: 5, zIndex: 2 }}\n      size=\"s\"\n      onClick={() => props.setActivePanel(\"history\")}\n      mode=\"tertiary\"\n    >\n      <Icon24Back fill=\"#fff\" />\n    </Button>\n    {props.curentLink && (\n      <iframe\n        id=\"my_iframe\"\n        style={{ flex: 1 }}\n        src={props.curentLink}\n        onLoad={(e) => console.log()}\n        seamless\n      ></iframe>\n    )} */}\n  </Panel>\n);\n\nFrame.propTypes = {\n  id: PropTypes.string.isRequired,\n  setActivePanel: PropTypes.func.isRequired,\n  curentLink: PropTypes.string,\n};\n\nexport default Frame;\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport { AdaptivityProvider, AppRoot } from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport History from \"./panels/History\";\nimport Frame from \"./panels/Frame\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"history\");\n  const [curentLink, setCurentLink] = useState(null);\n  //const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  // useEffect(() => {\n  //   bridge.subscribe(({ detail: { type, data } }) => {\n  //     if (type === \"VKWebAppUpdateConfig\") {\n  //       const schemeAttribute = document.createAttribute(\"scheme\");\n  //       schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n  //       document.body.attributes.setNamedItem(schemeAttribute);\n  //     }\n  //   });\n  //   async function fetchData() {\n  //     const user = await bridge.send(\"VKWebAppGetUserInfo\");\n  //     setUser(user);\n  //     setPopout(null);\n  //   }\n  //   fetchData();\n  // }, []);\n\n  return (\n    <AdaptivityProvider>\n      <AppRoot>\n        <View activePanel={activePanel}>\n          <History\n            id=\"history\"\n            setActivePanel={setActivePanel}\n            setCurentLink={setCurentLink}\n          />\n          <Frame\n            id=\"frame\"\n            setActivePanel={setActivePanel}\n            curentLink={curentLink}\n          />\n        </View>\n      </AppRoot>\n    </AdaptivityProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}